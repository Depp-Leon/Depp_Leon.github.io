<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>局域网共享VPN</title>
      <link href="/2023/04/21/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%ABVPN/"/>
      <url>/2023/04/21/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%ABVPN/</url>
      
        <content type="html"><![CDATA[<h1 id="局域网共享VPN的三种方式"><a href="#局域网共享VPN的三种方式" class="headerlink" title="局域网共享VPN的三种方式"></a>局域网共享VPN的三种方式</h1><h2 id="网络传输数据基本原理"><a href="#网络传输数据基本原理" class="headerlink" title="网络传输数据基本原理"></a>网络传输数据基本原理</h2><p>设备在不同局域网传输数据都需要经过路由器(网关)</p><p>网关内网ip即这片局域网的默认网关地址，当然有外网ip</p><p>数据被网关确认之后(局域网传输数据为广播方式，目的mac地址的设备会广播确认)</p><p>根据数据帧去掉头部之后ip数据报的目的ip(即上升到网络层)</p><p>与该路由器的路由表对比，找到下一跳需要转发的端口</p><p>再根据mac表封装mac帧(下降到数据链路层)</p><p>重复上述操作，直到找到目的ip所在的设备</p><h2 id="一、代理共享模式"><a href="#一、代理共享模式" class="headerlink" title="一、代理共享模式"></a>一、代理共享模式</h2><p>实现</p><img src="/images/2.1.png" alt="2.1" style="zoom:80%;" /><p>首先确保在同一局域网下</p><p>开代理的设备(电脑或者手机)在工具里</p><blockquote><p>开启“Allow LAN” ，设置“Port”端口号</p><p>ip：192.168.0.110   port：7890</p></blockquote><p>需要使用代理的设备，在wifi设置里面点击手动代理</p><blockquote><p>代理ip即开启代理的设备在该局域网下的ip</p><p>代理：手动</p><p>代理ip：192.168.0.110  port：7890</p></blockquote><p>这样该设备访问http数据将由开启代理的设备代传输，而开启代理的设备可以科学上网，则该设备也可科学上网。</p><p>若需要socks代理需要额外设置</p><p>优点</p><blockquote><p>shadowsocks,ssr,clash,v2ray不管pc端、手机端都可以使用</p></blockquote><p>缺点</p><blockquote><ol><li>所有需要代理的设备都需要独自设置代理ip和端口</li><li>大部分支持代理http只能支持TCP（如网页访问），若需要Sockets（其他app）需要开代理的那台设备设置</li><li>设备需要在同一局域网下</li></ol></blockquote><h2 id="二、网关共享模式"><a href="#二、网关共享模式" class="headerlink" title="二、网关共享模式"></a>二、网关共享模式</h2><p>实现</p><img src="/images/2.2.png" alt="2.2" style="zoom:80%;" /><p>首先开启网关模式，即将设备作为网关</p><p>第一种</p><blockquote><p>安卓手机为linux系统，使用手机root</p></blockquote><p>第二种</p><blockquote><p>widows电脑端使用linux(虚拟机)，或者mac端</p><p>点击service mode，打开clash的tun模式</p></blockquote><p>然后在路由器管理界面</p><blockquote><p>将其他设备的网关设置为开启网关模式设备的ip地址</p><p>也可以自己在各个设备调</p></blockquote><p>则所有设备需要上网，数据自动发送给默认网关(开网关的设备)，再传输给路由器</p><p>该方式又称为<strong>透明代理</strong>或者<strong>透明网关</strong></p><p>优点</p><blockquote><ol><li>只需要登录wifi管理页面，一次设置，所有设备都能上网</li><li>所有数据不管tcp或者udp都可以传输</li><li>可以实现链式代理</li></ol></blockquote><p>缺点</p><blockquote><ol><li>需要同一局域网</li><li>开启网关共享的设备必须是linux或者mac</li></ol></blockquote><h2 id="三、路由共享模式"><a href="#三、路由共享模式" class="headerlink" title="三、路由共享模式"></a>三、路由共享模式</h2><p>实现方式</p><p>1、共享wifi</p><p>2、usb共享手机流量套餐</p><img src="/images/2.3.png" alt="2.3" style="zoom:80%;" /><p>电脑端实现</p><blockquote><p>首先电脑上网需要使用网线连接</p><p>开启电脑端clash的tun模式，生成clash的虚拟网卡</p></blockquote><blockquote><p>在网络共享里面点击clash的虚拟网卡，共享给无线热点的虚拟网卡</p><p>或者有另外的网卡，共享另外的网卡</p></blockquote><p>则连接到该虚拟网卡下的局域网的设备都可以科学上网</p><p>手机端实现</p><blockquote><p>比较限制手机，手机需要有共享vpn功能，或者有使用usb共享数据的功能</p></blockquote><p>开启后，连接该手机的设备就可以上网</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>StudyList</title>
      <link href="/2023/04/21/StudyList/"/>
      <url>/2023/04/21/StudyList/</url>
      
        <content type="html"><![CDATA[<h1 id="学习清单"><a href="#学习清单" class="headerlink" title="学习清单"></a>学习清单</h1><h2 id="一、区块链"><a href="#一、区块链" class="headerlink" title="一、区块链"></a>一、区块链</h2><h4 id="1、区块链基础了解"><a href="#1、区块链基础了解" class="headerlink" title="1、区块链基础了解"></a>1、区块链基础了解</h4><blockquote><p><a href="https://btcdayu.gitbook.io/dayu/xiang-mu-yan-bao/cheng-chang/ying-yu-xue-xi">英语学习 - 聪明的投资者(币圈版) (gitbook.io)</a></p></blockquote><h4 id="2、区块链合约搭建"><a href="#2、区块链合约搭建" class="headerlink" title="2、区块链合约搭建"></a>2、区块链合约搭建</h4><blockquote><p><a href="https://www.bilibili.com/video/BV1Ca411n7ta/?spm_id_from=333.999.0.0&amp;vd_source=ff6132304e59c95c4edfeb975c805441">https://www.bilibili.com/video/BV1Ca411n7ta/?spm_id_from=333.999.0.0&amp;vd_source=ff6132304e59c95c4edfeb975c805441</a></p></blockquote><h4 id="3、Web3开发"><a href="#3、Web3开发" class="headerlink" title="3、Web3开发"></a>3、Web3开发</h4><blockquote><p><a href="https://tranqui.xyz/posts/100-days-of-code">Condensed Guide for Learning Web3 Development in 100 Days (tranqui.xyz)</a></p></blockquote><h2 id="二、网络工程"><a href="#二、网络工程" class="headerlink" title="二、网络工程"></a>二、网络工程</h2><h4 id="1、局域网共享VPN三种方式"><a href="#1、局域网共享VPN三种方式" class="headerlink" title="1、局域网共享VPN三种方式"></a>1、局域网共享VPN三种方式</h4><blockquote><ol><li><p>网关共享模式</p></li><li><p>代理共享模式</p></li></ol><p>Clash、V2ray、SSR开启代理；设备网关设置该开始代理的主机ip+端口号；设备数据交给开启代理的主机进行流通</p><ol start="3"><li>路由共享模式</li></ol><p> <a href="https://www.youtube.com/watch?v=GjhetHGIKLg&t=257s">【建议收藏】一个视频讲清楚所有局域网共享科学上网方法，让家里所有网络设备无需安装代理工具即可翻墙，没有软路由怎么让全家科学上网？http代理/socks代理/透明代理/WIFI热点，总有一种方法适合你 - YouTube</a></p></blockquote><h4 id="2、IP分类"><a href="#2、IP分类" class="headerlink" title="2、IP分类"></a>2、IP分类</h4><blockquote><p><a href="https://www.youtube.com/watch?v=rjHlF3oskvk&t=142s">原生IP、住宅IP新手科普，为什么需要住宅IP？通过虚拟网卡中转使住宅IP代理高速稳定，解决住宅IP国内无法连接的情况，911S5替代品，住宅IP与机房IP有什么区别？住宅IP类型检测、IP纯净度检测 - YouTube</a></p></blockquote><h4 id="3、IP中转和代理"><a href="#3、IP中转和代理" class="headerlink" title="3、IP中转和代理"></a>3、IP中转和代理</h4><blockquote><p><a href="https://www.youtube.com/watch?v=AEqP8x_tILw">【最全最细】中转提速教程，详解使用各种方式实现中转，端口转发、二级代理、隧道中转、链式代理，总有一种适合你！什么是中转？为什么需要中转？搭建xui端口转发、gost隧道中转、clash链式代理 - YouTube</a></p></blockquote><h4 id="4、网络通信的原理、过程"><a href="#4、网络通信的原理、过程" class="headerlink" title="4、网络通信的原理、过程"></a>4、网络通信的原理、过程</h4><blockquote><p><a href="https://www.youtube.com/playlist?list=PL5TbbtexT8T3d_7UX2aSFhoMYk-cl4kf4">节点搭建系列教程 - YouTube</a></p></blockquote><h2 id="三、计算机硬件"><a href="#三、计算机硬件" class="headerlink" title="三、计算机硬件"></a>三、计算机硬件</h2><h4 id="1、硬件分类"><a href="#1、硬件分类" class="headerlink" title="1、硬件分类"></a>1、硬件分类</h4><h4 id="2、硬件拆解与安装"><a href="#2、硬件拆解与安装" class="headerlink" title="2、硬件拆解与安装"></a>2、硬件拆解与安装</h4><blockquote><p><a href="https://www.bilibili.com/video/BV1Sb411e78a/?spm_id_from=333.999.0.0">【收藏不亏系列】台式装机全程攻略！不废话！组装/装系统/开机测试，统统手把手教学！纯干货求素质三连~_哔哩哔哩_bilibili</a></p></blockquote><h2 id="四、软件开发"><a href="#四、软件开发" class="headerlink" title="四、软件开发"></a>四、软件开发</h2><h4 id="1、网页全后端分离项目"><a href="#1、网页全后端分离项目" class="headerlink" title="1、网页全后端分离项目"></a>1、网页全后端分离项目</h4><blockquote><p><a href="https://www.bilibili.com/video/BV1zm4y1A7yQ/?spm_id_from=333.337.search-card.all.click&vd_source=242323ff8aae740f8fdf69171e690d1a">【开源项目分析，要学就学最新版3.8.3过渡3.8.4】若依-Vue（前后端分离版）【完整集合版191集】_哔哩哔哩_bilibili</a></p></blockquote><h4 id="2、App开发"><a href="#2、App开发" class="headerlink" title="2、App开发"></a>2、App开发</h4><blockquote><p><a href="https://www.bilibili.com/video/BV1ri4y1A7Ue/?spm_id_from=333.337.search-card.all.click&vd_source=242323ff8aae740f8fdf69171e690d1a">安卓APP开发速成_哔哩哔哩_bilibili</a></p></blockquote><h2 id="五、ChatGPT"><a href="#五、ChatGPT" class="headerlink" title="五、ChatGPT"></a>五、ChatGPT</h2><h4 id="1、学习手册"><a href="#1、学习手册" class="headerlink" title="1、学习手册"></a>1、学习手册</h4><blockquote><p><a href="https://nujuo8y1qx.feishu.cn/docx/AdqEdlT52oBiawx6Vv2cc89DnLb">‌‍﻿⁡‍﻿⁣‍⁢‌﻿‌⁡⁣‬﻿‌‍⁡‌‬⁡⁢‌‌‌⁢⁡‬﻿⁣﻿⁡‬‍⁡﻿⁤‍‌⁤‌ChatGPT 学习手册 - 飞书云文档 (feishu.cn)</a></p></blockquote><h4 id="2、AI工具集"><a href="#2、AI工具集" class="headerlink" title="2、AI工具集"></a>2、AI工具集</h4><blockquote><p><a href="https://ai-bot.cn/">AI工具集导航 | 500+ AI工具导航大全，国内外AI工具集合网站 (ai-bot.cn)</a></p></blockquote><h4 id="3、autoGPT"><a href="#3、autoGPT" class="headerlink" title="3、autoGPT"></a>3、autoGPT</h4><h2 id="六、个人提升"><a href="#六、个人提升" class="headerlink" title="六、个人提升"></a>六、个人提升</h2><h4 id="1、使用Hexo搭建博客"><a href="#1、使用Hexo搭建博客" class="headerlink" title="1、使用Hexo搭建博客"></a>1、使用Hexo搭建博客</h4><h4 id="2、英语听力-口语"><a href="#2、英语听力-口语" class="headerlink" title="2、英语听力+口语"></a>2、英语听力+口语</h4>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建</title>
      <link href="/2023/04/21/Hexo%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/04/21/Hexo%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo博客搭建"><a href="#Hexo博客搭建" class="headerlink" title="Hexo博客搭建"></a>Hexo博客搭建</h1><p>思路</p><blockquote><p>Hexo部署在本地，使用git项目管理工具，将Hexo同步到云服务器上，通过nginx代理，实现博客在服务器上的部署和访问</p></blockquote><p>前提条件</p><blockquote><p>云服务器：nginx、node.js、git</p><p>本地：git、node.js、Hexo</p></blockquote><h2 id="云服务器"><a href="#云服务器" class="headerlink" title="云服务器"></a>云服务器</h2><h3 id="一、Nginx"><a href="#一、Nginx" class="headerlink" title="一、Nginx"></a>一、Nginx</h3><h5 id="1-1-作用"><a href="#1-1-作用" class="headerlink" title="1.1 作用"></a>1.1 作用</h5><blockquote><p>作为web服务器，将服务器上的静态文件展示出来</p></blockquote><h5 id="1-2-安装"><a href="#1-2-安装" class="headerlink" title="1.2 安装"></a>1.2 安装</h5><blockquote><p>yun install -y nginx</p></blockquote><h5 id="1-3nginx命令"><a href="#1-3nginx命令" class="headerlink" title="1.3nginx命令"></a>1.3nginx命令</h5><blockquote><p>启动：/usr/local/nginx/sbin/nginx</p><p>停止：/usr/local/nginx/sbin/nginx -s stop</p><p>重启:  /usr/local/nginx/sbin/nginx -s reload</p></blockquote><h5 id="1-4-建立博客根目录，hexo同步之后加载在这个地方，通过nginx展示"><a href="#1-4-建立博客根目录，hexo同步之后加载在这个地方，通过nginx展示" class="headerlink" title="1.4 建立博客根目录，hexo同步之后加载在这个地方，通过nginx展示"></a>1.4 建立博客根目录，hexo同步之后加载在这个地方，通过nginx展示</h5><blockquote><p>cd /home</p><p>mkdir www</p><p>cd www</p><p>mkdir website</p></blockquote><h5 id="1-5-配置nginx"><a href="#1-5-配置nginx" class="headerlink" title="1.5 配置nginx"></a>1.5 配置nginx</h5><blockquote><p>vim /usr/local/nginx/conf/nginx.conf</p></blockquote><blockquote><ol><li>user root</li><li>http-&gt;server-&gt;location :root 后面改为刚新建的目录/home/www/website</li></ol><p><strong>或</strong>将server{}写为一个.conf,include导入到nginx.conf配置文件中。</p><p><strong>如</strong><img src="/images/1.png" alt="1"></p><p>include /etc/nginx/vhost/*.conf;</p></blockquote><h5 id="1-6-绑定域名"><a href="#1-6-绑定域名" class="headerlink" title="1.6 绑定域名"></a>1.6 绑定域名</h5><blockquote><p>配置文件中 server 后面改为你的域名</p><p>若无域名，则为服务器ip地址</p></blockquote><h3 id="二、node-js"><a href="#二、node-js" class="headerlink" title="二、node.js"></a>二、node.js</h3><h5 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h5><blockquote><p>curl -sL <a href="https://rpm.nodesource.com/setup_10.x">https://rpm.nodesource.com/setup_10.x</a> | bash -<br>yum install -y nodejs</p></blockquote><h5 id="2-2-查看版本号，验证是否成功"><a href="#2-2-查看版本号，验证是否成功" class="headerlink" title="2.2 查看版本号，验证是否成功"></a>2.2 查看版本号，验证是否成功</h5><blockquote><p>node -v</p><p>npm -v</p></blockquote><h3 id="三、Git"><a href="#三、Git" class="headerlink" title="三、Git"></a>三、Git</h3><h5 id="3-1-安装"><a href="#3-1-安装" class="headerlink" title="3.1 安装"></a>3.1 安装</h5><blockquote><p>yum install git</p></blockquote><h5 id="3-2-配置git用户"><a href="#3-2-配置git用户" class="headerlink" title="3.2 配置git用户"></a>3.2 配置git用户</h5><p>添加git用户</p><blockquote><p>adduser git</p></blockquote><p>修改用户权限</p><blockquote><p>chmod 740 /etc/sudoers</p></blockquote><blockquote><p>740分析：规定读、写、执行权限分别为 4 2 1</p><p>三位数字代表三种用户：拥有者、群组、其他组</p><p>7=4+2+1  4=4+0+0</p></blockquote><p>打开/ect/sudoers</p><blockquote><p>vim /etc/sudoers</p><p>sudoers文件：规定允许特定用户像root用户一样使用一些命令</p></blockquote><p>在root ALL下面添加</p><blockquote><p>git ALL=(ALL) ALL</p></blockquote><p>保存后再将权限修改回去</p><blockquote><p>chmod 400 /etc/sudoers   (只读)</p></blockquote><h5 id="3-3-设置git用户密码"><a href="#3-3-设置git用户密码" class="headerlink" title="3.3 设置git用户密码"></a>3.3 设置git用户密码</h5><blockquote><p>sudo passwd git</p></blockquote><h5 id="3-4-切换git用户配置密钥-目的是免登录"><a href="#3-4-切换git用户配置密钥-目的是免登录" class="headerlink" title="3.4 切换git用户配置密钥-目的是免登录"></a>3.4 切换git用户配置密钥-目的是免登录</h5><p>-目的是免登录</p><p>切换git并创建.ssh文件夹</p><blockquote><p>su git<br>cd ~<br>mkdir .ssh<br>cd .ssh</p></blockquote><p>*配置密钥 （该步有争议）</p><p>在该文件夹下创建文件authorized_keys</p><blockquote><p>vim authorized_keys</p></blockquote><p>修改权限</p><blockquote><p>chmod 600 ~/.ssh/authorized_keys<br>chmod 700 ~/.ssh</p></blockquote><p>在本地C:/users/18534/.ssh中后缀为pub的文件里的密钥复制到该文件中</p><p>密钥设置之后，在<strong>本地终端</strong>使用ssh方式连接云服务器</p><blockquote><p>ssh -v git@云服务器ip</p></blockquote><p>如果不用输入密码直接连到服务器说明配置git密钥成功。</p><h5 id="3-5-创建git仓库并使用“钩子”"><a href="#3-5-创建git仓库并使用“钩子”" class="headerlink" title="3.5 创建git仓库并使用“钩子”"></a>3.5 创建git仓库并使用“钩子”</h5><p>创建</p><blockquote><p>cd ~<br>git init –bare blog.git</p></blockquote><p>验证是否创建成功：在本地空目录下克隆该仓库</p><blockquote><p>git clone git@服务器ip:/home/git/blog.git</p></blockquote><p>若能把空仓库拉下来，说明创建成功。</p><p>在hooks里创建post-receive文件 –目的是使用“钩子”，同步hexo到仓库中时会将网页自动拉到博客终端</p><blockquote><p>vi ~/blog.git/hooks/post-receive</p></blockquote><p>打开文件并输入脚本</p><blockquote><p>git –work-tree=/home/www/website –git-dir=/home/git/blog.git checkout -f</p></blockquote><p>保存退出并设置权限</p><blockquote><p>chmod +x ~/blog.git/hooks/post-receive</p></blockquote><p><em>到此，服务器端设置完成</em></p><h2 id="本地端"><a href="#本地端" class="headerlink" title="本地端"></a>本地端</h2><h3 id="一、安装git"><a href="#一、安装git" class="headerlink" title="一、安装git"></a>一、安装git</h3><h5 id="1-1-window安装"><a href="#1-1-window安装" class="headerlink" title="1.1 window安装"></a>1.1 window安装</h5><blockquote><p><a href="https://git-scm.com/downloads">Git - Downloads (git-scm.com)</a></p></blockquote><p>或许该步在3.4步前就该安装，因为之前下载的有，就没有去验证</p><h5 id="1-2-配置usename和email"><a href="#1-2-配置usename和email" class="headerlink" title="1.2 配置usename和email"></a>1.2 配置usename和email</h5><p>若在hexo部署时候报该错，则设置</p><p>使用了全局变量</p><blockquote><p>git config –<a href="https://so.csdn.net/so/search?q=global&spm=1001.2101.3001.7020">global</a> user.name “username”  </p><p>git config –global user.email “email”</p></blockquote><h3 id="二、安装Node-js"><a href="#二、安装Node-js" class="headerlink" title="二、安装Node.js"></a>二、安装Node.js</h3><p>同上，不过是windows</p><p>–目的，npm作为包管理工具，可以下载第三方的包/程序到本地使用</p><h3 id="三、配置Hexo"><a href="#三、配置Hexo" class="headerlink" title="三、配置Hexo"></a>三、配置Hexo</h3><h5 id="3-1-npm配置镜像"><a href="#3-1-npm配置镜像" class="headerlink" title="3.1 npm配置镜像"></a>3.1 npm配置镜像</h5><p>npm在国外服务器比较卡顿，设置镜像</p><blockquote><p>npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a><br>然后安装cnpm –即镜像npm</p></blockquote><blockquote><p>npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p></blockquote><h5 id="3-2-安装hexo"><a href="#3-2-安装hexo" class="headerlink" title="3.2 安装hexo"></a>3.2 安装hexo</h5><blockquote><p>cnpm install -g hexo-cli</p></blockquote><h5 id="3-3-创建hexo实例"><a href="#3-3-创建hexo实例" class="headerlink" title="3.3 创建hexo实例"></a>3.3 创建hexo实例</h5><p>在该目录下，开启终端</p><p>创建hexo实例</p><blockquote><p>hexo init</p></blockquote><p>安装两个插件</p><blockquote><p>npm install hexo-deployer-git –save<br>npm install hexo-server</p></blockquote><p>使用</p><blockquote><p>hexo g  //generate,生成静态文件</p><p>hexo s  //server,开启hexo服务，访问本地4000端口查看博客</p></blockquote><h5 id="3-4、配置hexo"><a href="#3-4、配置hexo" class="headerlink" title="3.4、配置hexo"></a>3.4、配置hexo</h5><p>在hexo生成实例后的目录下，打开_config.yml</p><p>找到deploy作以下配置</p><blockquote><p>deploy:<br>type: git<br>repo: git@这里改为服务器公网IP:/home/git/blog.git<br>branch: master                                                        </p></blockquote><p>保存退出</p><h5 id="3-5-本地完善，部署到远程仓库"><a href="#3-5-本地完善，部署到远程仓库" class="headerlink" title="3.5 本地完善，部署到远程仓库"></a>3.5 本地完善，部署到远程仓库</h5><p>对博客进行的美化、功能添加、文章拟写等完毕后</p><blockquote><p>hexo clean //清理本地缓存，每次部署都得先清理</p><p>hexo g -d 生成静态文件，并部署到远程仓库</p></blockquote><p>查看服务器/home/www/website文件夹下是否有本地的博客页面</p><p>如果没有，说明该文件夹没有权限，需要设置权限</p><blockquote><p>cd /home</p><p>chmod 777 www</p><p>cd www</p><p>chmod 777 website</p></blockquote><p>访问服务器ip:80 即nginx服务器端口,访问是否显示博客页面，若无则重启nginx服务</p><blockquote><p>/usr/local/nginx/sbin/nginx -s reload</p></blockquote><p>到此，通过hexo搭建博客到服务器就结束啦!</p><p>下一步就是完善博客，上传博客。</p><h2 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a>参考地址</h2><blockquote><p>[(9条消息) <a href="https://blog.csdn.net/Jack_lzx/article/details/114271069?ops_request_misc=%7B%22request_id%22:%22168197390916800227436110%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=168197390916800227436110&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-114271069-null-null.142%5Ev85%5Epc_search_v2,239%5Ev2%5Einsert_chatgpt&utm_term=%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAhexo&spm=1018.2226.3001.4187">详细] 搭建hexo博客并部署阿里云服务器_火星飞鸟的博客-CSDN博客</a></p></blockquote><blockquote><p><a href="https://www.bilibili.com/video/BV19d4y1j7vs/?spm_id_from=333.337.search-card.all.click&vd_source=242323ff8aae740f8fdf69171e690d1a">hexo博客迁移Linux服务器_哔哩哔哩_bilibili</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
