<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>显卡</title>
      <link href="/2023/04/28/%E6%98%BE%E5%8D%A1/"/>
      <url>/2023/04/28/%E6%98%BE%E5%8D%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="显卡"><a href="#显卡" class="headerlink" title="显卡"></a>显卡</h1><h3 id="一、功能"><a href="#一、功能" class="headerlink" title="一、功能"></a>一、功能</h3><p>原理：各个软件将自己的画面传递给显卡，显卡将收自各个软件的画面一张一张画出来，映射到屏幕上，即是我们看到的画面。</p><p>显卡是计算机中的一种重要的组件，它主要负责图形处理和显示输出。随着计算机技术的不断发展，显卡的作用也越来越重要。</p><blockquote><p>首先，显卡可以将计算机中的数字信号转换成人类可以看懂的图像或者视频信号，并通过显示器输出。因此，显卡对于计算机用户来说是非常重要的组件，它决定了计算机显示画面的清晰度、色彩还原度和刷新频率。</p><p>其次，显卡在游戏、设计、视频编辑、建模等方面都起到了至关重要的作用。这些应用程序需要大量的计算能力来完成复杂的运算和图像处理任务，而显卡可以通过自身的GPU（图形处理器）来提供强大的计算性能，从而加速这些应用程序的执行速度。</p><p>此外，显卡还可以支持多屏幕输出、硬件加速视频解码、3D渲染等功能，帮助用户获得更好的使用体验。</p></blockquote><p>总之，显卡是计算机的重要组成部分，它在图形处理、游戏、设计、视频编辑等领域都有广泛的应用。</p><h3 id="二、分类"><a href="#二、分类" class="headerlink" title="二、分类"></a>二、分类</h3><h4 id="集成显卡"><a href="#集成显卡" class="headerlink" title="集成显卡"></a>集成显卡</h4><ul><li>描述：集成在电脑主板上，基本已淘汰</li><li>位置：主板北桥（老主板）</li><li>优点：省电、价格低</li></ul><h4 id="核心显卡"><a href="#核心显卡" class="headerlink" title="核心显卡"></a>核心显卡</h4><ul><li>描述：集成在 CPU 内部，规格小，性能有限</li><li>位置：CPU 内部</li><li>优点：省电、价格低</li></ul><h4 id="独立显卡"><a href="#独立显卡" class="headerlink" title="独立显卡"></a>独立显卡</h4><ul><li>描述：单独的组件，例如：GTX1080 Ti</li><li>位置：主板 PCI-E 插槽中</li><li>优点：扩展性强，性能强</li></ul><p>选择:独显&gt;核显&gt;集成显卡</p><h3 id="三、命名"><a href="#三、命名" class="headerlink" title="三、命名"></a>三、命名</h3><h5 id="英伟达-NVIDIA"><a href="#英伟达-NVIDIA" class="headerlink" title="英伟达/NVIDIA"></a>英伟达/NVIDIA</h5><p>简称 N卡</p><p><img src="E:\zut\Hexo\source\images\显卡图\n命名.jpg" alt="n命名"></p><p>前缀</p><blockquote><ul><li>GT：低端</li><li>GTS：入门</li><li>GTX：中端</li><li>RTX：高端</li></ul></blockquote><p>代号</p><p>前两位为代数，越新越好</p><p>后两位为性能</p><blockquote><ul><li>50：代表入门级</li><li>60：代表中级</li><li>70：代表高级</li><li>80：代表顶级</li><li>90：代表双芯旗舰版</li></ul></blockquote><p>后缀</p><blockquote><ul><li>Ti ：代表同等级的增强版</li><li>SE：代表阉割版</li><li>M：代表 Mobile，手提电脑使用</li><li>MX：移动增强版</li></ul></blockquote><h5 id="AMD"><a href="#AMD" class="headerlink" title="AMD"></a>AMD</h5><p>简称 A卡</p><p><img src="E:\zut\Hexo\source\images\显卡图\amd命名.jpg" alt="amd命名"></p><p>近几年AMD都用RX开头，比如常见的RX580，数字第一位代表的是代数，后面80代表的是性能等级，RX580&gt;RX570&gt;RX550，依次排序。</p><p>后缀</p><blockquote><ul><li>X2：双芯显卡，同型号显卡性能最强</li><li>X：代表完整核心</li><li>GE：同型号增强版</li><li>BOOST：同型号增强版</li><li>XT：同型号增强版</li><li>PRO：同型号增强版</li><li>D：阉割版</li></ul></blockquote><h5 id="公派显卡"><a href="#公派显卡" class="headerlink" title="公派显卡"></a>公派显卡</h5><p>显卡芯片厂商 英伟达或 AMD 发布的，经过稳定测验的第一代显卡</p><h5 id="非公版显卡"><a href="#非公版显卡" class="headerlink" title="非公版显卡"></a>非公版显卡</h5><p>其他厂商通过购买 英伟达、AMD 的芯片，来改造外观、散热等设计方案再发布出来的显卡。例如：华硕、微星、技嘉、索泰等</p><h3 id="四、参数"><a href="#四、参数" class="headerlink" title="四、参数"></a>四、参数</h3><ol><li>架构：相当于运行布局，布局越好跑的越流畅。</li><li>工艺：制程越小精度越高，越能发挥更多性能。</li><li>光栅以及流处理器：相当于劳动力，人越多执行力越强。</li><li>核心频率：反应速度，相当于跑车百米提速效率。</li><li>显存频率：相当于限速标志，决定了最大运行速度。</li><li>显存位宽：相当于划线，决定了最大运行通道。</li><li>显存容量：相当于道路限宽，决定了最大承载量。</li></ol><h3 id="五、天梯"><a href="#五、天梯" class="headerlink" title="五、天梯"></a>五、天梯</h3><p><img src="E:\zut\Hexo\source\images\显卡图\显卡天梯.jpg" alt="显卡天梯"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cpu</title>
      <link href="/2023/04/28/cpu/"/>
      <url>/2023/04/28/cpu/</url>
      
        <content type="html"><![CDATA[<h1 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h1><h3 id="一、组成"><a href="#一、组成" class="headerlink" title="一、组成"></a>一、组成</h3><p>CPU（中央处理器）是一种计算机硬件设备，相当于计算机的大脑，主要由运算器、控制器、寄存器三部分组成。</p><p><img src="E:\zut\Hexo\source\images\CPU图\CPU组成.png" alt="CPU组成"></p><h3 id="二、功能"><a href="#二、功能" class="headerlink" title="二、功能"></a>二、功能</h3><p>CPU的功能包括以下几个方面：</p><blockquote><ol><li>指令集执行：CPU可以读取存储在内存或者缓存中的指令，并根据这些指令执行相应的操作，比如算术运算、逻辑运算、数据传输等。</li></ol><p> <img src="E:\zut\Hexo\source\images\CPU图\cpu5条指令.png" alt="cpu5条指令"></p><ol start="2"><li>中断处理：当外部设备需要与CPU通信时，会发送一个中断信号给CPU，CPU会中断当前的工作，并转去执行相应的中断服务程序。</li></ol><p> <img src="E:\zut\Hexo\source\images\CPU图\中断.jpg" alt="中断"></p><ol start="3"><li>控制总线：CPU通过总线来控制其他硬件设备的操作，包括内存、输入输出设备等。</li></ol><p> <img src="E:\zut\Hexo\source\images\CPU图\总线.jpg" alt="总线"></p><ol start="4"><li>缓存管理：CPU可以使用高速缓存(cache)来加快访问内存的速度，提高整个系统的性能。</li></ol><p> <strong>cache涉及到直接映射、全相联、组相联</strong></p><p> <img src="E:\zut\Hexo\source\images\CPU图\cpucache.jpg" alt="cpucache"></p><ol start="5"><li>流水线操作：CPU可以将指令分成多个阶段，每个阶段都由不同的电路来处理，从而实现多条指令同时执行的效果，提高CPU的运算效率。</li></ol><p> <strong>不同架构的cpu流水线不同，下面为精简指令集RISC</strong></p><p> <img src="E:\zut\Hexo\source\images\CPU图\五级流水.jpg" alt="五级流水"></p><ol start="6"><li>常见的CPU还具有功耗管理、温度管理、性能调节等功能，以保证其稳定运行和长期使用。</li></ol></blockquote><p>总之，CPU是计算机的核心组件之一，它的功能非常重要，决定了计算机的运行速度和性能。</p><h3 id="三、架构"><a href="#三、架构" class="headerlink" title="三、架构"></a>三、架构</h3><p>指令集架构分为复杂指令集(CISC)和精简指令集(RISC)</p><p>复杂指令集CISC是X86、amd64两种架构，该架构主要在Intel和AMD两家公司，占领了95%以上的桌面计算机和服务器市场。</p><p>复杂指令集RISC以ARM为代表的架构，在智能手机、可穿戴设备等移动处理器市场占领主要地位。</p><p><img src="E:\zut\Hexo\source\images\CPU图\RISC和CISC区别.jpg" alt="RISC和CISC区别"></p><h3 id="四、命名"><a href="#四、命名" class="headerlink" title="四、命名"></a>四、命名</h3><h5 id="Intel"><a href="#Intel" class="headerlink" title="Intel"></a>Intel</h5><p><img src="E:\zut\Hexo\source\images\CPU图\intel命名.jpg" alt="intel命名"></p><blockquote><p><strong>“Intel”</strong>是英特尔的英文名称，也是目前热门的CPU品牌；</p><p><strong>“酷睿”</strong>代表英特尔品牌下面向普通消费者的一个CPU系列，一般划分为Core（酷睿）、Pentium（奔腾）、Celeron（赛扬）、Xeon（至强）、Atom（凌动）等；</p><p><strong>“i5”</strong>代表这款CPU定位中端，在其下面还有i3，在其上面还有i7和i9，同一代中，数字越大，性能越强；但是不同代数之间，性能不能直接相比，比如12代的i5在理论性能上是强于10代i7的。</p><p><strong>“12”</strong>代表这款CPU的代数，说明其已经发展到第十二代了，数字越大越新；</p><p><strong>“600”</strong>这三位数字代表<strong>Intel SKU型号划分</strong>，一般来说Core i7有固定几个SKU，比方说700；Core i5有600/500/400；Core i3有300/100等等，一般来说数字越大说明隶属的Core系列越高级，同级别下比较，数字越大频率越高，换句话说性能就越强，比方说Core i5-8600默认3.1GHz，睿频4.3GHz，比Core i5-8500默认3.0GHz，睿频4.1GHz要强。</p></blockquote><blockquote><p><strong>“K”</strong>带K的表示不锁频，可以配合Z系列主板进行超频操作，适合会超频玩家使用，比方说i7-12700K，i5-12600K等</p><p><strong>“F”</strong>带F的表示不带集成显卡，你必须配合独立显卡使用。</p></blockquote><h6 id="台式端"><a href="#台式端" class="headerlink" title="台式端"></a>台式端</h6><blockquote><p><strong>K：</strong>表示支持超频且内置核显的CPU型号，例如型号：i5-12600K、i7-12700K；</p><p><strong>F：</strong>表示无内置核显，例如型号：i5-12400F、i7-12700F；</p><p><strong>KF：</strong>表示支持超频且无内置核显的CPU型号，例如型号：i5-12600KF，i7-12700KF。</p><p><strong>T：</strong>表示低功耗版，相同型号下功耗更低，性能也差一些，例如型号：i7-10700T；</p><p><strong>X/XE：</strong>表示至尊旗舰级，例如型号：i9-10980XE。</p><p><strong>KS：</strong>可以理解为官方超频版，提升了主频的版本，例如i9-9900K和i9-9900KS，i9-9900KS出厂的主频要高于K，例如型号：i9-9900KS。</p></blockquote><h6 id="笔记本端"><a href="#笔记本端" class="headerlink" title="笔记本端"></a>笔记本端</h6><blockquote><p><strong>U：</strong>低电压，性能弱些但功耗低，通常出现在<strong>轻薄本</strong>中，举例型号：i7 10510U；</p><p><strong>H：</strong>标压，性能强，通常出现在<strong>游戏本</strong>中，举例型号：i5-11300H</p><p><strong>Y：</strong>超低电压，性能很弱功耗非常低，通常出现在轻薄本中，举例型号：i3-10110Y；</p><p><strong>HK：</strong>一般使用在intel高端发烧级CPU上，可超频，举例型号[i9-11980HK；</p><p><strong>G：</strong>G1、G4以及G7等，G后面的数字表示核显性能强弱，数字越大代表核显性能越强，通常数字小于4的是集成的普通超高清(UHD)核显，大于等于4的是集成的高性能锐炬(Iris)核显。intel移动版CPU后缀，举例型号：i5-1155G7、i3-1115G4、i3-1005G1；</p><p><strong>HQ：</strong>标准电压，Q板载四核，早期的老后缀，举例型号：i7-7700HQ；</p><p><strong>MQ：</strong>标准电压，Q插拔四核，早期的老后缀，举例型号：i7-4810MQ；</p><p><strong>M：</strong>早期后缀M就是移动端CPU，只是为了与台式机区别开，举例型号：i7-2620M。</p></blockquote><h5 id="AMD"><a href="#AMD" class="headerlink" title="AMD"></a>AMD</h5><p><img src="E:\zut\Hexo\source\images\CPU图\AMD命名.jpg" alt="AMD命名"></p><blockquote><p><strong>“AMD”</strong>是超威半导体公司的英文名称，在台式机领域和Intel不分伯仲；</p><p><strong>“锐龙”</strong>代表AMD品牌下面向普通消费者的一个CPU系列，按照系列划分，有Ryzen（锐龙）、Ryzen Pro（锐龙Pro）、Ryzen Threadripper（锐龙线程撕裂者）、EPYC（霄龙），除了EPYC霄龙隶属于服务器CPU外，Ryzen锐龙系列)都是有消费级桌面、移动产品。</p><p><strong>“R5”</strong>代表这款CPU定位中端，在其下面还有R3，在其上面还有R7和R9，同一代中，数字越大，性能越强；但是不同代数之间，性能不能直接相比，比如5代的R5在理论性能上是强于3代R7的。</p><p><strong>“5”</strong>代表这款CPU的代数，说明其已经发展到第5代了，数字越大越新；</p><p><strong>“600”</strong>这三位数字代表<strong>AMD SKU型号划分</strong>，Ryzen 7有800/700，Ryzen 5有600/500/400，Ryzen 3有300/200。同样地，数字越大，频率越高，在Ryzen 5里面甚至会有更多核心和线程；</p><p><strong>“X”</strong>带X的表示支持XFR技术，自适应动态扩频，除了睿频以外，还能够让CPU做工在高于睿频频率的工作状态，而频率的最大值受到散热器散热效果而变化，简单来说就是，散热器越强，频率越高。</p></blockquote><h6 id="台式端-1"><a href="#台式端-1" class="headerlink" title="台式端"></a>台式端</h6><blockquote><p><strong>G：</strong>表示属于APU，内置强大的核显，举例型号：R5 5600G、R7 5700G。</p><p><strong>X：</strong>不同于intel CPU的X后缀，带X结尾是指支持<strong>XFR技术</strong>的处理器，XFR是一种<strong>超频技术</strong>，是在Boost加速频率的基础上允许再次超频运行的一种技术，这个技术能让频率随不同散热解决方案(风冷/水冷/液氮)而升降，散热越牛逼超频越强悍。</p><p><strong>XT：</strong>相当于X的加强版，也可以说是特挑体质版，相同型号下XT比X性能略有提升，举例型号R9 3900XT、R7 3800XT、R5 3600XT；</p></blockquote><h6 id="笔记本端-1"><a href="#笔记本端-1" class="headerlink" title="笔记本端"></a>笔记本端</h6><blockquote><p><strong>U：</strong>低电压，性能弱些但功耗低，通常出现在轻薄本中，举例型号：R7-5700U；</p><p><strong>H：</strong>标压，性能强，通常出现在游戏本中，举例型号：R5-5600H；</p><p><strong>HX：</strong>一般使用在AMD高端发烧级CPU上，至尊版，举例型号：R9-5980HX；</p><p><strong>HS：</strong>相当于H功耗略低，通常出现在轻薄全能本，性能较强，举例型号：R7 5800HS、R5 5600HS</p></blockquote><h3 id="五、核心、线程"><a href="#五、核心、线程" class="headerlink" title="五、核心、线程"></a>五、核心、线程</h3><p>同代i5和i7的区别：i5是4核心4线程，i7是4核心8线程</p><blockquote><p>核心在CPU里即为core，多核处理器的多核在同一个CPU中，比多处理器处理更快。</p><p>线程即“同时”处理任务的数量，多线程处理速度也会相应加快</p></blockquote><h3 id="六、频率"><a href="#六、频率" class="headerlink" title="六、频率"></a>六、频率</h3><p>CPU 2.4GHz指的是计算机的中央处理器（CPU）时钟速度为2.4 GHz，即每秒钟可以执行2.4亿次时钟周期</p><blockquote><p>而一个指令分为取值周期和执行周期，取值主要根据存取周期/即CPU周期，CPU周期为多个时钟周期，即每秒执行的指令数的多少</p></blockquote><p>不过并不是频率越高cpu处理速度越快，需要综合其他的条件进行考虑。</p><h3 id="七、缓存"><a href="#七、缓存" class="headerlink" title="七、缓存"></a>七、缓存</h3><p><img src="E:\zut\Hexo\source\images\CPU图\cpucache.jpg" alt="cpucache"></p><blockquote><p>CPU缓存主要由cache组成</p><p>cache里的内容经过主存的映射，cpu执行时优先访问cache，若访问失败会访问主存，同时映射数据到cache</p></blockquote><h3 id="八、功耗"><a href="#八、功耗" class="headerlink" title="八、功耗"></a>八、功耗</h3><p>i3、i5、i7的性能不同，其功耗也不同，但i3/5/7也只是一个大系列，同样是i5，i5 4460/i5 4200M/i5 4200U他们的性能却完全不是一个量级。</p><p>而他们通常对应的应用场景也是 台式机（带K或无字母/一些特殊有字母型号）-普通笔记本（M结尾）-超级本（U/HQ结尾），更低功率意味着更低的功耗和更长的续航，当这都是以牺牲性能为代价的，4200U只相当于i3的3120M，而4200M又只相当于桌面版的i3 3210。</p><h3 id="九、总结"><a href="#九、总结" class="headerlink" title="九、总结"></a>九、总结</h3><p>核心架构才是影响cpu性能的关键。</p><p>在同一核心架构下，再比较几核几线程、主频、缓存、其他等等</p><p><strong>总结：****核心代号&gt;核心/线程&gt;频率&gt;缓存&gt;制程&gt;其他</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文件传输</title>
      <link href="/2023/04/28/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/"/>
      <url>/2023/04/28/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/</url>
      
        <content type="html"><![CDATA[<h1 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h1><h3 id="一、同一局域网电脑对电脑"><a href="#一、同一局域网电脑对电脑" class="headerlink" title="一、同一局域网电脑对电脑"></a>一、同一局域网电脑对电脑</h3><p>条件：</p><blockquote><ol><li>同一局域网</li><li>两台电脑</li></ol></blockquote><p>操作：</p><blockquote><ol><li>选择文件夹右击属性-&gt;共享<img src="E:\zut\Hexo\source\images\3.2.png" alt="3.2"></li><li>点击共享-&gt;选择用户everyone-&gt;更改权限“读取或写入”<img src="E:\zut\Hexo\source\images\3.3.png" alt="3.3"></li><li>网络共享中心设置<img src="E:\zut\Hexo\source\images\3.1.png" alt="3.1"></li><li>查看本机ip，cmd终端输入ipconfig，查看本机的局域网ip</li><li>在同一局域网下的另一台主机，输入win+R，再输入”\ip“，此ip为上一台主机的局域网ip</li><li>输入第一台主机账号密码即实现文件共享</li></ol></blockquote><h3 id="二、同一局域网电脑对手机"><a href="#二、同一局域网电脑对手机" class="headerlink" title="二、同一局域网电脑对手机"></a>二、同一局域网电脑对手机</h3><p>条件：</p><blockquote><ol><li>电脑作为传输端，其他电脑或者手机作为接收端</li><li>在同一局域网下</li></ol></blockquote><p>操作：</p><blockquote><ol><li>下载最新的HFS传输工具<a href="https://github.com/rejetto/hfs/releases">Releases · rejetto/hfs (github.com)</a></li><li>本机运行hfs，弹出网页界面</li><li>选择要传输的文件</li><li>其他设备(电脑或者手机)，浏览器访问上述ip地址进行文件下载</li></ol></blockquote><h3 id="三、不限制网段不限制设备"><a href="#三、不限制网段不限制设备" class="headerlink" title="三、不限制网段不限制设备"></a>三、不限制网段不限制设备</h3><p>使用send-anywhere</p><p>地址：</p><blockquote><p><a href="https://send-anywhere.com/#transfer">Send Anywhere - File transfer (send-anywhere.com)</a></p></blockquote><p>优点：</p><blockquote><ol><li>不限制电脑端或手机端</li><li>不限制是否在同局域网</li><li>手机端浏览器选择桌面版即可传输</li></ol></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>局域网共享VPN</title>
      <link href="/2023/04/21/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%ABVPN/"/>
      <url>/2023/04/21/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B1%E4%BA%ABVPN/</url>
      
        <content type="html"><![CDATA[<h1 id="局域网共享VPN的三种方式"><a href="#局域网共享VPN的三种方式" class="headerlink" title="局域网共享VPN的三种方式"></a>局域网共享VPN的三种方式</h1><h2 id="网络传输数据基本原理"><a href="#网络传输数据基本原理" class="headerlink" title="网络传输数据基本原理"></a>网络传输数据基本原理</h2><p>设备在不同局域网传输数据都需要经过路由器(网关)</p><p>网关内网ip即这片局域网的默认网关地址，当然有外网ip</p><p>数据被网关确认之后(局域网传输数据为广播方式，目的mac地址的设备会广播确认)</p><p>根据数据帧去掉头部之后ip数据报的目的ip(即上升到网络层)</p><p>与该路由器的路由表对比，找到下一跳需要转发的端口</p><p>再根据mac表封装mac帧(下降到数据链路层)</p><p>重复上述操作，直到找到目的ip所在的设备</p><h2 id="一、代理共享模式"><a href="#一、代理共享模式" class="headerlink" title="一、代理共享模式"></a>一、代理共享模式</h2><p>实现</p><img src="/images/2.1.png" alt="2.1" style="zoom:80%;" /><p>首先确保在同一局域网下</p><p>开代理的设备(电脑或者手机)在工具里</p><blockquote><p>开启“Allow LAN” ，设置“Port”端口号</p><p>ip：192.168.0.110   port：7890</p></blockquote><p>需要使用代理的设备，在wifi设置里面点击手动代理</p><blockquote><p>代理ip即开启代理的设备在该局域网下的ip</p><p>代理：手动</p><p>代理ip：192.168.0.110  port：7890</p></blockquote><p>这样该设备访问http数据将由开启代理的设备代传输，而开启代理的设备可以科学上网，则该设备也可科学上网。</p><p>若需要socks代理需要额外设置</p><p>优点</p><blockquote><p>shadowsocks,ssr,clash,v2ray不管pc端、手机端都可以使用</p></blockquote><p>缺点</p><blockquote><ol><li>所有需要代理的设备都需要独自设置代理ip和端口</li><li>大部分支持代理http只能支持TCP（如网页访问），若需要Sockets（其他app）需要开代理的那台设备设置</li><li>设备需要在同一局域网下</li></ol></blockquote><h2 id="二、网关共享模式"><a href="#二、网关共享模式" class="headerlink" title="二、网关共享模式"></a>二、网关共享模式</h2><p>实现</p><img src="/images/2.2.png" alt="2.2" style="zoom:80%;" /><p>首先开启网关模式，即将设备作为网关</p><p>第一种</p><blockquote><p>安卓手机为linux系统，使用手机root</p></blockquote><p>第二种</p><blockquote><p>widows电脑端使用linux(虚拟机)，或者mac端</p><p>点击service mode，打开clash的tun模式</p></blockquote><p>然后在路由器管理界面</p><blockquote><p>将其他设备的网关设置为开启网关模式设备的ip地址</p><p>也可以自己在各个设备调</p></blockquote><p>则所有设备需要上网，数据自动发送给默认网关(开网关的设备)，再传输给路由器</p><p>该方式又称为<strong>透明代理</strong>或者<strong>透明网关</strong></p><p>优点</p><blockquote><ol><li>只需要登录wifi管理页面，一次设置，所有设备都能上网</li><li>所有数据不管tcp或者udp都可以传输</li><li>可以实现链式代理</li></ol></blockquote><p>缺点</p><blockquote><ol><li>需要同一局域网</li><li>开启网关共享的设备必须是linux或者mac</li></ol></blockquote><h2 id="三、路由共享模式"><a href="#三、路由共享模式" class="headerlink" title="三、路由共享模式"></a>三、路由共享模式</h2><p>实现方式</p><p>1、共享wifi</p><p>2、usb共享手机流量套餐</p><img src="/images/2.3.png" alt="2.3" style="zoom:80%;" /><p>电脑端实现</p><blockquote><p>首先电脑上网需要使用网线连接</p><p>开启电脑端clash的tun模式，生成clash的虚拟网卡</p></blockquote><blockquote><p>在网络共享里面点击clash的虚拟网卡，共享给无线热点的虚拟网卡</p><p>或者有另外的网卡，共享另外的网卡</p></blockquote><p>则连接到该虚拟网卡下的局域网的设备都可以科学上网</p><p>手机端实现</p><blockquote><p>比较限制手机，手机需要有共享vpn功能，或者有使用usb共享数据的功能</p></blockquote><p>开启后，连接该手机的设备就可以上网</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>StudyList</title>
      <link href="/2023/04/21/StudyList/"/>
      <url>/2023/04/21/StudyList/</url>
      
        <content type="html"><![CDATA[<h1 id="学习清单"><a href="#学习清单" class="headerlink" title="学习清单"></a>学习清单</h1><h2 id="一、区块链"><a href="#一、区块链" class="headerlink" title="一、区块链"></a>一、区块链</h2><h4 id="1、区块链基础了解"><a href="#1、区块链基础了解" class="headerlink" title="1、区块链基础了解"></a>1、区块链基础了解</h4><blockquote><p><a href="https://btcdayu.gitbook.io/dayu/xiang-mu-yan-bao/cheng-chang/ying-yu-xue-xi">英语学习 - 聪明的投资者(币圈版) (gitbook.io)</a></p></blockquote><h4 id="2、区块链合约搭建"><a href="#2、区块链合约搭建" class="headerlink" title="2、区块链合约搭建"></a>2、区块链合约搭建</h4><blockquote><p><a href="https://www.bilibili.com/video/BV1Ca411n7ta/?spm_id_from=333.999.0.0&amp;vd_source=ff6132304e59c95c4edfeb975c805441">https://www.bilibili.com/video/BV1Ca411n7ta/?spm_id_from=333.999.0.0&amp;vd_source=ff6132304e59c95c4edfeb975c805441</a></p></blockquote><h4 id="3、Web3开发"><a href="#3、Web3开发" class="headerlink" title="3、Web3开发"></a>3、Web3开发</h4><blockquote><p><a href="https://tranqui.xyz/posts/100-days-of-code">Condensed Guide for Learning Web3 Development in 100 Days (tranqui.xyz)</a></p></blockquote><h2 id="二、网络工程"><a href="#二、网络工程" class="headerlink" title="二、网络工程"></a>二、网络工程</h2><h4 id="1、局域网共享VPN三种方式"><a href="#1、局域网共享VPN三种方式" class="headerlink" title="1、局域网共享VPN三种方式"></a>1、局域网共享VPN三种方式</h4><blockquote><ol><li><p>网关共享模式</p></li><li><p>代理共享模式</p></li></ol><p>Clash、V2ray、SSR开启代理；设备网关设置该开始代理的主机ip+端口号；设备数据交给开启代理的主机进行流通</p><ol start="3"><li>路由共享模式</li></ol><p> <a href="https://www.youtube.com/watch?v=GjhetHGIKLg&t=257s">【建议收藏】一个视频讲清楚所有局域网共享科学上网方法，让家里所有网络设备无需安装代理工具即可翻墙，没有软路由怎么让全家科学上网？http代理/socks代理/透明代理/WIFI热点，总有一种方法适合你 - YouTube</a></p></blockquote><h4 id="2、IP分类"><a href="#2、IP分类" class="headerlink" title="2、IP分类"></a>2、IP分类</h4><blockquote><p><a href="https://www.youtube.com/watch?v=rjHlF3oskvk&t=142s">原生IP、住宅IP新手科普，为什么需要住宅IP？通过虚拟网卡中转使住宅IP代理高速稳定，解决住宅IP国内无法连接的情况，911S5替代品，住宅IP与机房IP有什么区别？住宅IP类型检测、IP纯净度检测 - YouTube</a></p></blockquote><h4 id="3、IP中转和代理"><a href="#3、IP中转和代理" class="headerlink" title="3、IP中转和代理"></a>3、IP中转和代理</h4><blockquote><p><a href="https://www.youtube.com/watch?v=AEqP8x_tILw">【最全最细】中转提速教程，详解使用各种方式实现中转，端口转发、二级代理、隧道中转、链式代理，总有一种适合你！什么是中转？为什么需要中转？搭建xui端口转发、gost隧道中转、clash链式代理 - YouTube</a></p></blockquote><h4 id="4、网络通信的原理、过程"><a href="#4、网络通信的原理、过程" class="headerlink" title="4、网络通信的原理、过程"></a>4、网络通信的原理、过程</h4><blockquote><p><a href="https://www.youtube.com/playlist?list=PL5TbbtexT8T3d_7UX2aSFhoMYk-cl4kf4">节点搭建系列教程 - YouTube</a></p></blockquote><h2 id="三、计算机硬件"><a href="#三、计算机硬件" class="headerlink" title="三、计算机硬件"></a>三、计算机硬件</h2><h4 id="1、硬件分类"><a href="#1、硬件分类" class="headerlink" title="1、硬件分类"></a>1、硬件分类</h4><h4 id="2、硬件拆解与安装"><a href="#2、硬件拆解与安装" class="headerlink" title="2、硬件拆解与安装"></a>2、硬件拆解与安装</h4><blockquote><p><a href="https://www.bilibili.com/video/BV1Sb411e78a/?spm_id_from=333.999.0.0">【收藏不亏系列】台式装机全程攻略！不废话！组装/装系统/开机测试，统统手把手教学！纯干货求素质三连~_哔哩哔哩_bilibili</a></p></blockquote><h2 id="四、软件开发"><a href="#四、软件开发" class="headerlink" title="四、软件开发"></a>四、软件开发</h2><h4 id="1、网页全后端分离项目"><a href="#1、网页全后端分离项目" class="headerlink" title="1、网页全后端分离项目"></a>1、网页全后端分离项目</h4><blockquote><p><a href="https://www.bilibili.com/video/BV1zm4y1A7yQ/?spm_id_from=333.337.search-card.all.click&vd_source=242323ff8aae740f8fdf69171e690d1a">【开源项目分析，要学就学最新版3.8.3过渡3.8.4】若依-Vue（前后端分离版）【完整集合版191集】_哔哩哔哩_bilibili</a></p></blockquote><h4 id="2、App开发"><a href="#2、App开发" class="headerlink" title="2、App开发"></a>2、App开发</h4><blockquote><p><a href="https://www.bilibili.com/video/BV1ri4y1A7Ue/?spm_id_from=333.337.search-card.all.click&vd_source=242323ff8aae740f8fdf69171e690d1a">安卓APP开发速成_哔哩哔哩_bilibili</a></p></blockquote><h2 id="五、ChatGPT"><a href="#五、ChatGPT" class="headerlink" title="五、ChatGPT"></a>五、ChatGPT</h2><h4 id="1、学习手册"><a href="#1、学习手册" class="headerlink" title="1、学习手册"></a>1、学习手册</h4><blockquote><p><a href="https://nujuo8y1qx.feishu.cn/docx/AdqEdlT52oBiawx6Vv2cc89DnLb">‌‍﻿⁡‍﻿⁣‍⁢‌﻿‌⁡⁣‬﻿‌‍⁡‌‬⁡⁢‌‌‌⁢⁡‬﻿⁣﻿⁡‬‍⁡﻿⁤‍‌⁤‌ChatGPT 学习手册 - 飞书云文档 (feishu.cn)</a></p></blockquote><h4 id="2、AI工具集"><a href="#2、AI工具集" class="headerlink" title="2、AI工具集"></a>2、AI工具集</h4><blockquote><p><a href="https://ai-bot.cn/">AI工具集导航 | 500+ AI工具导航大全，国内外AI工具集合网站 (ai-bot.cn)</a></p></blockquote><h4 id="3、autoGPT"><a href="#3、autoGPT" class="headerlink" title="3、autoGPT"></a>3、autoGPT</h4><h2 id="六、个人提升"><a href="#六、个人提升" class="headerlink" title="六、个人提升"></a>六、个人提升</h2><h4 id="1、使用Hexo搭建博客"><a href="#1、使用Hexo搭建博客" class="headerlink" title="1、使用Hexo搭建博客"></a>1、使用Hexo搭建博客</h4><h4 id="2、英语听力-口语"><a href="#2、英语听力-口语" class="headerlink" title="2、英语听力+口语"></a>2、英语听力+口语</h4>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建</title>
      <link href="/2023/04/21/Hexo%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/04/21/Hexo%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo博客搭建"><a href="#Hexo博客搭建" class="headerlink" title="Hexo博客搭建"></a>Hexo博客搭建</h1><p>思路</p><blockquote><p>Hexo部署在本地，使用git项目管理工具，将Hexo同步到云服务器上，通过nginx代理，实现博客在服务器上的部署和访问</p></blockquote><p>前提条件</p><blockquote><p>云服务器：nginx、node.js、git</p><p>本地：git、node.js、Hexo</p></blockquote><h2 id="云服务器"><a href="#云服务器" class="headerlink" title="云服务器"></a>云服务器</h2><h3 id="一、Nginx"><a href="#一、Nginx" class="headerlink" title="一、Nginx"></a>一、Nginx</h3><h5 id="1-1-作用"><a href="#1-1-作用" class="headerlink" title="1.1 作用"></a>1.1 作用</h5><blockquote><p>作为web服务器，将服务器上的静态文件展示出来</p></blockquote><h5 id="1-2-安装"><a href="#1-2-安装" class="headerlink" title="1.2 安装"></a>1.2 安装</h5><blockquote><p>yun install -y nginx</p></blockquote><h5 id="1-3nginx命令"><a href="#1-3nginx命令" class="headerlink" title="1.3nginx命令"></a>1.3nginx命令</h5><blockquote><p>启动：/usr/local/nginx/sbin/nginx</p><p>停止：/usr/local/nginx/sbin/nginx -s stop</p><p>重启:  /usr/local/nginx/sbin/nginx -s reload</p></blockquote><h5 id="1-4-建立博客根目录，hexo同步之后加载在这个地方，通过nginx展示"><a href="#1-4-建立博客根目录，hexo同步之后加载在这个地方，通过nginx展示" class="headerlink" title="1.4 建立博客根目录，hexo同步之后加载在这个地方，通过nginx展示"></a>1.4 建立博客根目录，hexo同步之后加载在这个地方，通过nginx展示</h5><blockquote><p>cd /home</p><p>mkdir www</p><p>cd www</p><p>mkdir website</p></blockquote><h5 id="1-5-配置nginx"><a href="#1-5-配置nginx" class="headerlink" title="1.5 配置nginx"></a>1.5 配置nginx</h5><blockquote><p>vim /usr/local/nginx/conf/nginx.conf</p></blockquote><blockquote><ol><li>user root</li><li>http-&gt;server-&gt;location :root 后面改为刚新建的目录/home/www/website</li></ol><p><strong>或</strong>将server{}写为一个.conf,include导入到nginx.conf配置文件中。</p><p><strong>如</strong><img src="/images/1.png" alt="1"></p><p>include /etc/nginx/vhost/*.conf;</p></blockquote><h5 id="1-6-绑定域名"><a href="#1-6-绑定域名" class="headerlink" title="1.6 绑定域名"></a>1.6 绑定域名</h5><blockquote><p>配置文件中 server 后面改为你的域名</p><p>若无域名，则为服务器ip地址</p></blockquote><h3 id="二、node-js"><a href="#二、node-js" class="headerlink" title="二、node.js"></a>二、node.js</h3><h5 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h5><blockquote><p>curl -sL <a href="https://rpm.nodesource.com/setup_10.x">https://rpm.nodesource.com/setup_10.x</a> | bash -<br>yum install -y nodejs</p></blockquote><h5 id="2-2-查看版本号，验证是否成功"><a href="#2-2-查看版本号，验证是否成功" class="headerlink" title="2.2 查看版本号，验证是否成功"></a>2.2 查看版本号，验证是否成功</h5><blockquote><p>node -v</p><p>npm -v</p></blockquote><h3 id="三、Git"><a href="#三、Git" class="headerlink" title="三、Git"></a>三、Git</h3><h5 id="3-1-安装"><a href="#3-1-安装" class="headerlink" title="3.1 安装"></a>3.1 安装</h5><blockquote><p>yum install git</p></blockquote><h5 id="3-2-配置git用户"><a href="#3-2-配置git用户" class="headerlink" title="3.2 配置git用户"></a>3.2 配置git用户</h5><p>添加git用户</p><blockquote><p>adduser git</p></blockquote><p>修改用户权限</p><blockquote><p>chmod 740 /etc/sudoers</p></blockquote><blockquote><p>740分析：规定读、写、执行权限分别为 4 2 1</p><p>三位数字代表三种用户：拥有者、群组、其他组</p><p>7=4+2+1  4=4+0+0</p></blockquote><p>打开/ect/sudoers</p><blockquote><p>vim /etc/sudoers</p><p>sudoers文件：规定允许特定用户像root用户一样使用一些命令</p></blockquote><p>在root ALL下面添加</p><blockquote><p>git ALL=(ALL) ALL</p></blockquote><p>保存后再将权限修改回去</p><blockquote><p>chmod 400 /etc/sudoers   (只读)</p></blockquote><h5 id="3-3-设置git用户密码"><a href="#3-3-设置git用户密码" class="headerlink" title="3.3 设置git用户密码"></a>3.3 设置git用户密码</h5><blockquote><p>sudo passwd git</p></blockquote><h5 id="3-4-切换git用户配置密钥-目的是免登录"><a href="#3-4-切换git用户配置密钥-目的是免登录" class="headerlink" title="3.4 切换git用户配置密钥-目的是免登录"></a>3.4 切换git用户配置密钥-目的是免登录</h5><p>-目的是免登录</p><p>切换git并创建.ssh文件夹</p><blockquote><p>su git<br>cd ~<br>mkdir .ssh<br>cd .ssh</p></blockquote><p>*配置密钥 （该步有争议）</p><p>在该文件夹下创建文件authorized_keys</p><blockquote><p>vim authorized_keys</p></blockquote><p>修改权限</p><blockquote><p>chmod 600 ~/.ssh/authorized_keys<br>chmod 700 ~/.ssh</p></blockquote><p>在本地C:/users/18534/.ssh中后缀为pub的文件里的密钥复制到该文件中</p><p>密钥设置之后，在<strong>本地终端</strong>使用ssh方式连接云服务器</p><blockquote><p>ssh -v git@云服务器ip</p></blockquote><p>如果不用输入密码直接连到服务器说明配置git密钥成功。</p><h5 id="3-5-创建git仓库并使用“钩子”"><a href="#3-5-创建git仓库并使用“钩子”" class="headerlink" title="3.5 创建git仓库并使用“钩子”"></a>3.5 创建git仓库并使用“钩子”</h5><p>创建</p><blockquote><p>cd ~<br>git init –bare blog.git</p></blockquote><p>验证是否创建成功：在本地空目录下克隆该仓库</p><blockquote><p>git clone git@服务器ip:/home/git/blog.git</p></blockquote><p>若能把空仓库拉下来，说明创建成功。</p><p>在hooks里创建post-receive文件 –目的是使用“钩子”，同步hexo到仓库中时会将网页自动拉到博客终端</p><blockquote><p>vi ~/blog.git/hooks/post-receive</p></blockquote><p>打开文件并输入脚本</p><blockquote><p>git –work-tree=/home/www/website –git-dir=/home/git/blog.git checkout -f</p></blockquote><p>保存退出并设置权限</p><blockquote><p>chmod +x ~/blog.git/hooks/post-receive</p></blockquote><p><em>到此，服务器端设置完成</em></p><h2 id="本地端"><a href="#本地端" class="headerlink" title="本地端"></a>本地端</h2><h3 id="一、安装git"><a href="#一、安装git" class="headerlink" title="一、安装git"></a>一、安装git</h3><h5 id="1-1-window安装"><a href="#1-1-window安装" class="headerlink" title="1.1 window安装"></a>1.1 window安装</h5><blockquote><p><a href="https://git-scm.com/downloads">Git - Downloads (git-scm.com)</a></p></blockquote><p>或许该步在3.4步前就该安装，因为之前下载的有，就没有去验证</p><h5 id="1-2-配置usename和email"><a href="#1-2-配置usename和email" class="headerlink" title="1.2 配置usename和email"></a>1.2 配置usename和email</h5><p>若在hexo部署时候报该错，则设置</p><p>使用了全局变量</p><blockquote><p>git config –<a href="https://so.csdn.net/so/search?q=global&spm=1001.2101.3001.7020">global</a> user.name “username”  </p><p>git config –global user.email “email”</p></blockquote><h3 id="二、安装Node-js"><a href="#二、安装Node-js" class="headerlink" title="二、安装Node.js"></a>二、安装Node.js</h3><p>同上，不过是windows</p><p>–目的，npm作为包管理工具，可以下载第三方的包/程序到本地使用</p><h3 id="三、配置Hexo"><a href="#三、配置Hexo" class="headerlink" title="三、配置Hexo"></a>三、配置Hexo</h3><h5 id="3-1-npm配置镜像"><a href="#3-1-npm配置镜像" class="headerlink" title="3.1 npm配置镜像"></a>3.1 npm配置镜像</h5><p>npm在国外服务器比较卡顿，设置镜像</p><blockquote><p>npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a><br>然后安装cnpm –即镜像npm</p></blockquote><blockquote><p>npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p></blockquote><h5 id="3-2-安装hexo"><a href="#3-2-安装hexo" class="headerlink" title="3.2 安装hexo"></a>3.2 安装hexo</h5><blockquote><p>cnpm install -g hexo-cli</p></blockquote><h5 id="3-3-创建hexo实例"><a href="#3-3-创建hexo实例" class="headerlink" title="3.3 创建hexo实例"></a>3.3 创建hexo实例</h5><p>在该目录下，开启终端</p><p>创建hexo实例</p><blockquote><p>hexo init</p></blockquote><p>安装两个插件</p><blockquote><p>npm install hexo-deployer-git –save<br>npm install hexo-server</p></blockquote><p>使用</p><blockquote><p>hexo g  //generate,生成静态文件</p><p>hexo s  //server,开启hexo服务，访问本地4000端口查看博客</p></blockquote><h5 id="3-4、配置hexo"><a href="#3-4、配置hexo" class="headerlink" title="3.4、配置hexo"></a>3.4、配置hexo</h5><p>在hexo生成实例后的目录下，打开_config.yml</p><p>找到deploy作以下配置</p><blockquote><p>deploy:<br>type: git<br>repo: git@这里改为服务器公网IP:/home/git/blog.git<br>branch: master                                                        </p></blockquote><p>保存退出</p><h5 id="3-5-本地完善，部署到远程仓库"><a href="#3-5-本地完善，部署到远程仓库" class="headerlink" title="3.5 本地完善，部署到远程仓库"></a>3.5 本地完善，部署到远程仓库</h5><p>对博客进行的美化、功能添加、文章拟写等完毕后</p><blockquote><p>hexo clean //清理本地缓存，每次部署都得先清理</p><p>hexo g -d 生成静态文件，并部署到远程仓库</p></blockquote><p>查看服务器/home/www/website文件夹下是否有本地的博客页面</p><p>如果没有，说明该文件夹没有权限，需要设置权限</p><blockquote><p>cd /home</p><p>chmod 777 www</p><p>cd www</p><p>chmod 777 website</p></blockquote><p>访问服务器ip:80 即nginx服务器端口,访问是否显示博客页面，若无则重启nginx服务</p><blockquote><p>/usr/local/nginx/sbin/nginx -s reload</p></blockquote><p>到此，通过hexo搭建博客到服务器就结束啦!</p><p>下一步就是完善博客，上传博客。</p><h2 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a>参考地址</h2><blockquote><p>[(9条消息) <a href="https://blog.csdn.net/Jack_lzx/article/details/114271069?ops_request_misc=%7B%22request_id%22:%22168197390916800227436110%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=168197390916800227436110&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-114271069-null-null.142%5Ev85%5Epc_search_v2,239%5Ev2%5Einsert_chatgpt&utm_term=%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAhexo&spm=1018.2226.3001.4187">详细] 搭建hexo博客并部署阿里云服务器_火星飞鸟的博客-CSDN博客</a></p></blockquote><blockquote><p><a href="https://www.bilibili.com/video/BV19d4y1j7vs/?spm_id_from=333.337.search-card.all.click&vd_source=242323ff8aae740f8fdf69171e690d1a">hexo博客迁移Linux服务器_哔哩哔哩_bilibili</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
